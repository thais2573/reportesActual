<?php

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * inventarioRepository
 *
 * This class was generated by the PhpStorm "Php Annotations" Plugin. Add your own custom
 * repository methods below.
 */
class inventarioRepository extends EntityRepository
{
  /**
   * Devolver los inventarios
   */
  public function findInventarios()
  {
    $qb = $this->getEntityManager()->createQueryBuilder();
   $qb->select('p')
      ->from('AppBundle:inventario', 'p')
      ->where('p.estado =:estado')
      ->setParameter('estado', 'Activo')
     ->orWhere('p.activo =:activo')
      ->setParameter('activo', 'Si')

    ;
    return $qb;
  }
  public function findResponsablesInventarios()
  {
    $qb = $this->getEntityManager()->createQueryBuilder();
    $qb->select('p.responsable')
      ->from('AppBundle:inventario', 'p')
      ->where('p.estado =:estado')
      ->setParameter('estado', 'Activo')
      ->orWhere('p.activo =:activo')
      ->setParameter('activo', 'Si')

    ;
    return $qb;
  }
  public function EstacionT($dpto)
  {
    $queryBuilder = $this->createQueryBuilder('inventario');
    $queryBuilder
      ->andWhere('inventario.dpto = :tipo')
      ->setParameter('tipo', $dpto)
      ->select('inventario.id');
    return $queryBuilder->getQuery()->execute();

  }
  public function Todo($id)
  {

    $queryBuilder = $this->createQueryBuilder('inventario');



    $queryBuilder
      ->andWhere('inventario.id = :tipo')
      ->setParameter('tipo', $id)
      ->select('inventario');

    return $queryBuilder->getQuery()->execute();

  }
  public function CantidadMonitor($dpto)
  {
    $queryBuilder = $this->createQueryBuilder('inventario');
    $queryBuilder
      ->andWhere('inventario.dpto = :tipo')
      ->setParameter('tipo', $dpto)
      ->andWhere('inventario.tipoEquipo = :tipoE')
      ->setParameter('tipoE', 'monitor')
      ->select('COUNT(inventario.tipoEquipo)');
    return $queryBuilder->getQuery()->execute();

  }

}
